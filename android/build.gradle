// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        buildToolsVersion = findProperty('android.buildToolsVersion') ?: '35.0.0'
        minSdkVersion = Integer.parseInt(findProperty('android.minSdkVersion') ?: '24')
        compileSdkVersion = Integer.parseInt(findProperty('android.compileSdkVersion') ?: '35')
        targetSdkVersion = Integer.parseInt(findProperty('android.targetSdkVersion') ?: '34')
        kotlinVersion = findProperty('android.kotlinVersion') ?: '1.9.25'

        ndkVersion = "26.1.10909125"
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath('com.android.tools.build:gradle')
        classpath('com.facebook.react:react-native-gradle-plugin')
        classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')
    }
}

apply plugin: "com.facebook.react.rootproject"

allprojects {
    repositories {
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url(new File(['node', '--print', "require.resolve('react-native/package.json')"].execute(null, rootDir).text.trim(), '../android'))
        }
        maven {
            // Android JSC is installed from npm
            url(new File(['node', '--print', "require.resolve('jsc-android/package.json', { paths: [require.resolve('react-native/package.json')] })"].execute(null, rootDir).text.trim(), '../dist'))
        }

        google()
        mavenCentral()
        maven { url 'https://www.jitpack.io' }
    }
}

// This patch fixes the "Unresolved reference: getModule" error
allprojects {
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'com.android.tools.build' && details.requested.name == 'gradle') {
                details.useVersion '8.0.0'
            }
        }
    }
}

// Add this to your settings.gradle to apply our plugin fix
gradle.beforeProject { project ->
    if (project.name == 'react-native-gradle-plugin') {
        project.buildscript {
            doLast {
                def pluginBuildFile = project.file('build.gradle.kts')
                if (pluginBuildFile.exists()) {
                    def content = pluginBuildFile.text
                    if (content.contains(".getModule(")) {
                        def patched = content.replaceAll(/(\.(get|findByName|getByName)\([^)]+\))\.getModule\("([^"]+)"\)/, '$1.module("$2")')
                        pluginBuildFile.text = patched
                        println "Patched React Native Gradle plugin build file to fix getModule reference"
                    }
                }
            }
        }
    }
}
